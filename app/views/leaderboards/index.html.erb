<!-- app/views/leaderboards/index.html.erb -->

<%= render 'leaderboards/leaderboards_breadcrumbs' %>

<div class="mx-auto max-w-2xl lg:max-w-4xl shadow-md p-8 bg-white rounded-md my-4">
  <h1 class="font-bold text-2xl mb-4 w-full text-center">Leaderboards</h1>

  <!-- Advanced filters form -->
  <div class="w-full mb-4 px-4">
    
    <%= form_with url: leaderboards_path, method: :get, id: 'leaderboard_form' do |form| %>
      <%= select_tag 'track_type', options_for_select(['Supercross', 'Motocross']), prompt: 'Select Track Type', id: 'track_type_select' %>
      
      <%= select_tag 'track_id', options_for_select([]), prompt: 'Select Track Name', id: 'track_name_select', disabled: true %>
      
      <%= select_tag 'time_of_day', options_for_select(['Morning', 'Noon', 'Evening', 'Night']), prompt: 'Select Time Of Day', id: 'time_of_day_select', disabled: true %>
      
      <%= select_tag 'weather_condition', options_for_select(['Clear', 'Rain', 'Wet']), prompt: 'Select Weather Condition', id: 'weather_condition_select', disabled: true %>

      <%= submit_tag 'Search', id: 'search_button', disabled: true %>
    <% end %>
  </div>

  <div>
    <% if @leaderboards.present? %>
      <% @leaderboards.each do |leaderboard| %>
        <div class="w-full sm:w-1/2 md:w-1/3 lg:w-1/4 p-4 shadow border border-gray-200 bg-gray-100 mb-4 mx-2">
          <%= link_to track_leaderboard_path(leaderboard.track, leaderboard), class: "block font-bold mb-2 text-xl", method: :get do %>
            üèÅ <%= leaderboard.track.track_name %>
          <% end %>
          <div><strong>Weather:</strong> <%= leaderboard.weather_condition %></div>
          <div><strong>Time of Day:</strong> <%= leaderboard.time_of_day %></div>
        </div>
      <% end %>
    <% else %>
    <p class="w-full text-center">No leaderboard entries found.</p>
    <% end %>
  </div>

</div>

<script>
  document.addEventListener("turbo:load", function() {
    console.log("Turbo loaded"); // Check if this is logging multiple times
  const trackTypeSelect = document.getElementById('track_type_select');
  console.log(trackTypeSelect); // Check the value here
  if (trackTypeSelect) {
    const trackNameSelect = document.getElementById('track_name_select');
    const timeOfDaySelect = document.getElementById('time_of_day_select');
    const weatherConditionSelect = document.getElementById('weather_condition_select');
    
    // Enable the next dropdown based on the current selection
    const enableSelect = (selectElement, enable) => {
      selectElement.disabled = !enable;
      if (!enable) selectElement.innerHTML = '';
    };

    // Listen to Turbo Stream events when updates to the 'track_name_select' occur
    document.addEventListener("turbo:after-stream-render", function(event) {
      if (event.target.id === 'track_name_select') {
        enableSelect(trackNameSelect, true);
        enableSelect(timeOfDaySelect, false);
        enableSelect(weatherConditionSelect, false);
      }
    });

    // Fetch Tracks by selected Track Type
    trackTypeSelect.addEventListener('change', function() {
      enableSelect(trackNameSelect, false);
      fetch('/tracks_by_type?track_type=' + encodeURIComponent(this.value), {
        method: 'GET',
        headers: {
          'Accept': 'text/vnd.turbo-stream.html',
        }
      }).then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.text();
      }).then(responseText => {
        Turbo.renderStreamMessage(responseText);
        enableSelect(trackNameSelect, true);
      }).catch(error => {
        console.error('Failed to fetch tracks:', error);
      });
    });

    // Fetch Leaderboards by selected Track Name
    trackNameSelect.addEventListener('change', function() {
      enableSelect(timeOfDaySelect, true);

      fetch('/leaderboards_by_track?track_id=' + encodeURIComponent(this.value), {
        method: 'GET',
        headers: {
          'Accept': 'text/vnd.turbo-stream.html',
        }
      }).then(response => {
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }
        return response.text();
      }).then(responseText => {
        Turbo.renderStreamMessage(responseText);
      }).catch(error => {
        console.error('Failed to fetch leaderboards:', error);
      });
    });

    // Enable the weather condition select when a time of day has been selected
    timeOfDaySelect.addEventListener('change', function() {
      enableSelect(weatherConditionSelect, true);
    });

    // Enable the search button when all selections have been made
    weatherConditionSelect.addEventListener('change', function() {
      const searchButton = document.getElementById('search_button');
      searchButton.disabled = !(trackTypeSelect.value && trackNameSelect.value && timeOfDaySelect.value && this.value);
    });
  } else {
    console.log("trackTypeSelect not found!");
  }
});
</script>
